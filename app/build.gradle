plugins {
    id "net.ltgt.errorprone" version "0.0.13"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdk_version
    buildToolsVersion rootProject.ext.buildTools_version

    defaultConfig {

        applicationId "us.echols.embyplaylistmaker"
        minSdkVersion rootProject.ext.minSdk_version
        targetSdkVersion rootProject.ext.targetSdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions('main')
    productFlavors {
        mock {
            dimension 'main'
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension 'main'
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dependencies {

    // android
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$supportLibrary_version"
    implementation "com.android.support:design:$supportLibrary_version"
    implementation "com.android.support:support-v4:$supportLibrary_version"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayout_version"

    // gson
    implementation "com.google.code.gson:gson:$gson_version"

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // local unit tests
    implementation "com.android.support:support-v4:$supportLibrary_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "com.nhaarman:mockito-kotlin:$mockito_kotlin_version"

    // Android unit tests
    androidTestImplementation "junit:junit:$junit_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "com.android.support.test:runner:$runner_version"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espresso_version", {
        exclude group: 'com.google.code.findbugs'
    })

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$rxJava_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlin_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid_version"
    implementation "com.f2prateek.rx.preferences2:rx-preferences:$rxPreferences_version"

    // networking
    implementation "com.amitshekhar.android:android-networking:$androidNetworking_version"
    implementation "com.amitshekhar.android:rx2-android-networking:$androidNetworking_version"

    // butterknife (android view binding)
    implementation "com.jakewharton:butterknife:$butterknife_version"
    kapt "com.jakewharton:butterknife-compiler:$butterknife_version"

    // koin (dependency injection)
    implementation "org.koin:koin-android:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"

    // leak canary (memory leak detector)
    implementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"

    // stetho (debug bridge)
    implementation "com.facebook.stetho:stetho:$stetho_version"

    // anko (kotlin helper library)
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation "org.jetbrains.anko:anko-design:$anko_version"

    // android architecture components
    implementation "android.arch.persistence.room:runtime:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
//    testImplementation "android.arch.persistence.room:testing:$room_version"
}